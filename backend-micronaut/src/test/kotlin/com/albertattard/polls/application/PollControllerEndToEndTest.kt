package com.albertattard.polls.application

import com.albertattard.polls.helpers.CreatePollHelper
import com.albertattard.polls.model.CreatedPoll
import io.kotlintest.matchers.string.shouldMatch
import io.kotlintest.shouldNotBe
import io.kotlintest.specs.StringSpec
import io.micronaut.http.HttpRequest
import io.micronaut.http.client.RxHttpClient
import io.micronaut.http.client.annotation.Client
import io.micronaut.test.annotation.MicronautTest

@MicronautTest
class PollControllerEndToEndTest(
    @Client("/poll") private val client: RxHttpClient
) : StringSpec({
    "should create the poll and return the share link generated by the greeting service" {
        val create = CreatePollHelper.sample()
        val response = client.toBlocking().exchange(HttpRequest.POST("/create", create), CreatedPoll::class.java)
        println("Created: ${response.body()}")
        val created = response.body()
        created shouldNotBe null
        created?.readLink shouldNotBe null
        created?.readLink shouldMatch "/poll/[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}"
    }
})
