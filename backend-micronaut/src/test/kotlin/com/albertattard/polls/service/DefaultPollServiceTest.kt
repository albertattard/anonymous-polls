package com.albertattard.polls.service

import com.albertattard.polls.model.CreatePoll
import com.albertattard.polls.model.PossibleAnswer
import com.albertattard.polls.model.Question
import com.albertattard.polls.repository.PollsTable
import io.kotlintest.shouldBe
import io.kotlintest.specs.StringSpec
import io.micronaut.test.annotation.MicronautTest
import java.util.UUID
import org.jetbrains.exposed.sql.Database
import org.jetbrains.exposed.sql.andWhere
import org.jetbrains.exposed.sql.selectAll
import org.jetbrains.exposed.sql.transactions.transaction

@MicronautTest
class DefaultPollServiceTest(
    private val database: Database
) : StringSpec({
    "should create the poll and return the share link generated by the greeting service" {
        val create = CreatePoll(
            caption = "Test Poll",
            questions = listOf(
                Question(possibleAnswers = listOf(PossibleAnswer("Sample question 1")))
            )
        )

        val service = DefaultPollService(database)
        val created = service.create(create)

        val id = UUID.fromString(created.link.substring(6))

        /* Verify that the poll is in the database */
        val inDb: Map<String, Any> = transaction(database) {
            PollsTable.selectAll()
                .andWhere { PollsTable.id eq id }
                .singleOrNull()
                ?.let {
                    mapOf("id" to it[PollsTable.id].value)
                } ?: emptyMap()
        }
        inDb["id"] shouldBe id
    }
})
