package com.albertattard.polls.application

import com.albertattard.polls.model.CreatePoll
import com.albertattard.polls.model.CreatedPoll
import com.albertattard.polls.model.PossibleAnswer
import com.albertattard.polls.model.Question
import com.albertattard.polls.repository.PollsTable
import io.kotlintest.matchers.string.shouldMatch
import io.kotlintest.shouldBe
import io.kotlintest.shouldNotBe
import io.kotlintest.specs.StringSpec
import io.micronaut.http.HttpRequest
import io.micronaut.http.client.RxHttpClient
import io.micronaut.http.client.annotation.Client
import io.micronaut.test.annotation.MicronautTest
import java.util.UUID
import org.jetbrains.exposed.sql.Database
import org.jetbrains.exposed.sql.andWhere
import org.jetbrains.exposed.sql.selectAll
import org.jetbrains.exposed.sql.transactions.transaction

@MicronautTest
class PollControllerEndToEndTest(
    private val database: Database,
    @Client("/poll") private val client: RxHttpClient
) : StringSpec({
    "should create the poll and return the share link generated by the greeting service" {
        val create = CreatePoll(
            caption = "Test Poll",
            questions = listOf(
                Question(possibleAnswers = listOf(PossibleAnswer("Sample question 1")))
            )
        )

        val response = client.toBlocking().exchange(HttpRequest.POST("/create", create), CreatedPoll::class.java)
        println("Created: ${response.body()}")
        val created = response.body()
        created shouldNotBe null
        created?.link shouldNotBe null
        created?.link shouldMatch "/poll/[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}"

        val id = UUID.fromString(created?.link?.substring(6))

        /* Verify that the poll is in the database */
        val inDb = transaction(database) {
            PollsTable.selectAll()
                .andWhere { PollsTable.id eq id }
                .singleOrNull()
                ?.let {
                    it[PollsTable.id].value
                }
        }
        inDb shouldBe id
    }
})
