package com.albertattard.polls.application

import com.albertattard.polls.helpers.CreatePollHelper
import com.albertattard.polls.model.CreatedPoll
import com.albertattard.polls.model.Poll
import io.kotlintest.shouldBe
import io.kotlintest.shouldNotBe
import io.kotlintest.specs.StringSpec
import io.micronaut.http.HttpRequest
import io.micronaut.http.client.RxHttpClient
import io.micronaut.http.client.annotation.Client
import io.micronaut.test.annotation.MicronautTest

@MicronautTest
class PollControllerEndToEndTest(
    @Client("/") private val client: RxHttpClient
) : StringSpec({
    "should create the poll and return the share link generated by the greeting service" {
        /* Create it */
        val create = CreatePollHelper.random()
        val created = client.toBlocking()
            .exchange(HttpRequest.POST("/poll/create", create), CreatedPoll::class.java)
            .body()
        created shouldNotBe null

        /* Read it*/
        val poll = client.toBlocking().retrieve(created?.readLink, Poll.Found::class.java)
        poll.caption shouldBe create.caption
        poll.questions shouldBe create.questions

        /* Delete it*/
        client.toBlocking()
            .exchange(HttpRequest.DELETE(created?.deleteLink, emptyMap<String, String>()), String::class.java)
    }
})
